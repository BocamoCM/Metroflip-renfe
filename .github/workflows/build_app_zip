name: "UFBT Build and Test App"

on:
  push:
    branches:
      - RENFE
  pull_request:
    branches:
      - RENFE
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install UFBT
        run: |
          python3 -m pip install --upgrade pip
          pip install ufbt
          
      - name: Initialize UFBT Environment
        run: |
          ufbt update --index-url=https://update.flipperzero.one/firmware/directory.json --channel=release
          ufbt vscode_dist
          
      - name: Build FAP Applications
        run: |
          set -e
          ufbt faps
          
      - name: Debug Show Build Output
        run: |
          echo "=== Current directory contents ==="
          ls -la
          echo ""
          echo "=== UFBT build directory contents ==="
          ls -la ~/.ufbt/build/ 2>/dev/null || echo "UFBT build directory not found"
          echo ""
          echo "=== Local dist directory contents ==="
          ls -la dist/ 2>/dev/null || echo "Local dist directory not found"
          echo ""
          echo "=== Looking for .fal files (compiled Flipper apps) ==="
          find ~/.ufbt/build/ -name "*.fal" 2>/dev/null || echo "No .fal files found in UFBT build"
          find . -name "*.fal" 2>/dev/null || echo "No .fal files found in current directory"
          echo ""
          echo "=== Looking for .fap files ==="
          find . -name "*.fap" 2>/dev/null || echo "No .fap files found"
          echo ""
          echo "=== Looking for .elf files ==="
          find ~/.ufbt/build/ -name "*.elf" 2>/dev/null || echo "No .elf files found in UFBT build"
          find . -name "*.elf" 2>/dev/null || echo "No .elf files found in current directory"
          
      - name: Create Build Archive
        run: |
          echo "Creating comprehensive build archive..."
          
          # Create a temporary directory to organize files
          mkdir -p build_artifacts
          
          # Flag to track if we found any artifacts
          found_artifacts=false
          
          # Copy .fal files from UFBT build directory (these are the actual compiled apps)
          if find ~/.ufbt/build/ -name "*.fal" 2>/dev/null | grep -q .; then
            echo "Found .fal files in UFBT build directory, copying..."
            find ~/.ufbt/build/ -name "*.fal" -exec cp {} build_artifacts/ \;
            found_artifacts=true
          fi
          
          # Copy .elf files from UFBT build directory
          if find ~/.ufbt/build/ -name "*.elf" 2>/dev/null | grep -q .; then
            echo "Found .elf files in UFBT build directory, copying..."
            find ~/.ufbt/build/ -name "*.elf" -exec cp {} build_artifacts/ \;
            found_artifacts=true
          fi
          
          # Copy files from local dist directory
          if [ -d "dist" ]; then
            echo "Found local dist directory, copying..."
            cp -r dist/* build_artifacts/ 2>/dev/null || echo "No files in dist directory"
            found_artifacts=true
          fi
          
          # Copy any .fap files from current directory (alternative location)
          if find . -name "*.fap" -print -quit | grep -q .; then
            echo "Found .fap files in current directory, copying..."
            find . -name "*.fap" -exec cp {} build_artifacts/ \;
            found_artifacts=true
          fi
          
          # Copy any .fal files from current directory (alternative location)
          if find . -name "*.fal" -print -quit | grep -q .; then
            echo "Found .fal files in current directory, copying..."
            find . -name "*.fal" -exec cp {} build_artifacts/ \;
            found_artifacts=true
          fi
          
          # Check if we have anything to archive
          if [ "$found_artifacts" = true ] && [ "$(ls -A build_artifacts)" ]; then
            echo "=== Archive contents ==="
            ls -la build_artifacts/
            echo "Build artifacts found and archived successfully"
          else
            echo "No build artifacts found, creating info file..."
            echo "Build completed at: $(date)" > build_artifacts/build_info.txt
            echo "UFBT build directory contents:" >> build_artifacts/build_info.txt
            ls -la ~/.ufbt/build/ >> build_artifacts/build_info.txt 2>&1 || echo "Cannot access UFBT build directory" >> build_artifacts/build_info.txt
            echo "Local dist directory contents:" >> build_artifacts/build_info.txt
            ls -la dist/ >> build_artifacts/build_info.txt 2>&1 || echo "No local dist directory" >> build_artifacts/build_info.txt
          fi
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flipper-build-artifacts
          path: |
            **/*.fap
            **/build*/
            **/dist*/
            **/*.elf
            **/*.bin
            build_artifacts/
          if-no-files-found: warn
