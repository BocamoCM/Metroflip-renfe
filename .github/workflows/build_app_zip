name: "UFBT Build and Test App"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # More specific version for consistency
          
      - name: Install UFBT
        run: |
          python3 -m pip install --upgrade pip
          pip install ufbt
          
      - name: Initialize UFBT Environment
        run: |
          ufbt update --index-url=https://update.flipperzero.one/firmware/directory.json --channel=release
          
      - name: Build FAP Applications
        run: |
          set -e
          ufbt faps
          
      - name: Debug Build Output and Locations
        run: |
          echo "=== Current directory contents ==="
          ls -la
          echo ""
          echo "=== Home directory structure ==="
          ls -la ~/
          echo ""
          echo "=== UFBT directory structure ==="
          if [ -d ~/.ufbt ]; then
            find ~/.ufbt -type f -name "*.fap" -o -name "*.fal" -o -name "*.elf" 2>/dev/null || echo "No build artifacts found in ~/.ufbt"
          else
            echo "~/.ufbt directory does not exist"
          fi
          echo ""
          echo "=== Current directory search for build artifacts ==="
          find . -type f -name "*.fap" -o -name "*.fal" -o -name "*.elf" 2>/dev/null || echo "No build artifacts found in current directory"
          echo ""
          echo "=== UFBT status and configuration ==="
          ufbt status || echo "UFBT status command failed"
          
      - name: Organize Build Artifacts
        run: |
          echo "Creating build artifacts directory..."
          mkdir -p build_output
          
          # Track if we found any artifacts
          artifacts_found=false
          
          # Function to copy files and update flag
          copy_artifacts() {
            local source_pattern="$1"
            local description="$2"
            
            if find $source_pattern 2>/dev/null | head -1 | grep -q .; then
              echo "Found $description, copying..."
              find $source_pattern -exec cp {} build_output/ \; 2>/dev/null
              artifacts_found=true
              return 0
            fi
            return 1
          }
          
          # Look for build artifacts in common locations
          copy_artifacts "~/.ufbt -name '*.fap'" "FAP files in UFBT directory"
          copy_artifacts "~/.ufbt -name '*.fal'" "FAL files in UFBT directory"
          copy_artifacts "~/.ufbt -name '*.elf'" "ELF files in UFBT directory"
          copy_artifacts ". -name '*.fap'" "FAP files in current directory"
          copy_artifacts ". -name '*.fal'" "FAL files in current directory"
          copy_artifacts ". -name '*.elf'" "ELF files in current directory"
          
          # Check for dist directory
          if [ -d "dist" ] && [ "$(ls -A dist 2>/dev/null)" ]; then
            echo "Found dist directory with contents, copying..."
            cp -r dist/* build_output/ 2>/dev/null || true
            artifacts_found=true
          fi
          
          # Create build info regardless
          echo "Build completed at: $(date)" > build_output/build_info.txt
          echo "UFBT version: $(pip show ufbt | grep Version || echo 'Unknown')" >> build_output/build_info.txt
          echo "Python version: $(python3 --version)" >> build_output/build_info.txt
          
          if [ "$artifacts_found" = true ]; then
            echo "=== Final build artifacts ==="
            ls -la build_output/
            echo "SUCCESS: Build artifacts collected"
          else
            echo "WARNING: No build artifacts found"
            echo "This might indicate a build issue or unexpected file locations"
            
            # Additional debugging info
            echo "=== Additional Debug Information ===" >> build_output/debug_info.txt
            echo "Current directory:" >> build_output/debug_info.txt
            pwd >> build_output/debug_info.txt
            echo "Directory contents:" >> build_output/debug_info.txt
            ls -la >> build_output/debug_info.txt
            echo "UFBT directory contents:" >> build_output/debug_info.txt
            ls -la ~/.ufbt >> build_output/debug_info.txt 2>&1 || echo "Cannot access ~/.ufbt" >> build_output/debug_info.txt
          fi
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flipper-build-artifacts
          path: build_output/
          if-no-files-found: warn
          retention-days: 30
          
      - name: List Final Artifacts (for verification)
        run: |
          echo "=== Final verification of artifacts to upload ==="
          if [ -d build_output ]; then
            find build_output -type f -exec ls -la {} \;
          else
            echo "ERROR: build_output directory was not created"
            exit 1
          fi
