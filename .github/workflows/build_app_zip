name: "UFBT Build and Test App"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Latest UFBT
        run: |
          python3 -m pip install --upgrade pip
          pip install --upgrade ufbt
          echo "Installed UFBT version:"
          ufbt --version

      - name: Initialize UFBT Environment
        run: |
          ufbt update --index-url=https://update.flipperzero.one/firmware/directory.json --channel=release
          ufbt vscode_dist

      - name: Build FAP Applications
        run: |
          set -ex
          ufbt faps

      - name: Debug Show Build Output
        run: |
          echo "=== Current directory contents ==="
          ls -la
          echo ""
          echo "=== Looking for all build-related directories ==="
          find . -type d -name "*build*" 2>/dev/null || echo "No build directories found"
          echo ""
          echo "=== Looking for dist directories ==="
          find . -type d -name "*dist*" 2>/dev/null || echo "No dist directories found"
          echo ""
          echo "=== All generated files (excluding git) ==="
          find . -type f ! -path "./.git/*" ! -name ".git*" -newer . 2>/dev/null || echo "No recently generated files found"
          echo ""
          echo "=== Directory tree ==="
          tree -a -L 3 2>/dev/null || find . -type d | head -20

      - name: Zip Build Output
        run: |
          echo "Creating build archive..."
          mkdir -p archive_temp

          # Copy generated FAPs
          find . -name "*.fap" -exec cp {} archive_temp/ \;

          # Copy .elf files if available
          find . -name "*.elf" -exec cp {} archive_temp/ \;

          # Add build info for context
          echo "Build info generated at $(date)" > archive_temp/README.txt
          echo "" >> archive_temp/README.txt
          ufbt --version >> archive_temp/README.txt

          zip -r build-output.zip archive_temp/
          rm -rf archive_temp

      - name: Upload Build ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-build
          path: build-output.zip
